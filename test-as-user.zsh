#!/usr/bin/env zsh
# Pulse MVP User Testing Script
# This script helps you test Pulse as if you're a new user

set -e

echo "🚀 Pulse MVP User Testing Script"
echo "================================"
echo ""

# Get the current pulse directory
PULSE_SOURCE_DIR="$(cd "$(dirname "$0")" && pwd)"
echo "📁 Source directory: ${PULSE_SOURCE_DIR}"
echo ""

# Test installation directory
TEST_INSTALL_DIR="/tmp/pulse_user_test_$(date +%s)"
PULSE_INSTALL_DIR="${TEST_INSTALL_DIR}/.local/share/pulse"
TEST_ZSHRC="${TEST_INSTALL_DIR}/.zshrc"

echo "🔧 Setting up test environment..."
echo "   Install dir: ${PULSE_INSTALL_DIR}"
echo "   Test .zshrc: ${TEST_ZSHRC}"
echo ""

# Create test directory structure
mkdir -p "$(dirname "${PULSE_INSTALL_DIR}")"
mkdir -p "${PULSE_INSTALL_DIR}/plugins"

# Copy Pulse to test directory
echo "📦 Copying Pulse files..."
cp -r "${PULSE_SOURCE_DIR}/pulse.zsh" "${PULSE_INSTALL_DIR}/"
cp -r "${PULSE_SOURCE_DIR}/lib" "${PULSE_INSTALL_DIR}/"
cp -r "${PULSE_SOURCE_DIR}/pulse.zshrc.template" "${PULSE_INSTALL_DIR}/"
echo "✅ Pulse files copied"
echo ""

# Clone some real plugins for testing
echo "🔌 Cloning test plugins..."
cd "${PULSE_INSTALL_DIR}/plugins"

echo "   → zsh-autosuggestions..."
git clone --quiet https://github.com/zsh-users/zsh-autosuggestions 2>/dev/null || echo "     (already exists)"

echo "   → zsh-syntax-highlighting..."
git clone --quiet https://github.com/zsh-users/zsh-syntax-highlighting 2>/dev/null || echo "     (already exists)"

echo "✅ Test plugins cloned"
echo ""

# Create test .zshrc
echo "📝 Creating test .zshrc..."
cat > "${TEST_ZSHRC}" <<'ZSHRC'
# Pulse MVP Test Configuration
# Generated by test-as-user.zsh

# Set test environment
export PULSE_DIR="${HOME}/.local/share/pulse"
export PULSE_CACHE_DIR="${HOME}/.cache/pulse"
export PULSE_DEBUG=1

# Source Pulse
source "${HOME}/.local/share/pulse/pulse.zsh"

# Declare plugins
plugins=(
  zsh-users/zsh-autosuggestions
  zsh-users/zsh-syntax-highlighting
)

# Test that plugins loaded
echo ""
echo "🔍 Plugin Loading Status:"
echo "========================"
for plugin_name in zsh-autosuggestions zsh-syntax-highlighting; do
  if [[ -v pulse_plugin_status[$plugin_name] ]]; then
    echo "✅ ${plugin_name}: ${pulse_plugin_status[$plugin_name]} (stage: ${pulse_plugin_stages[$plugin_name]})"
  else
    echo "❌ ${plugin_name}: not registered"
  fi
done
echo ""
ZSHRC

echo "✅ Test .zshrc created"
echo ""

# Create a test script that simulates user environment
TEST_SCRIPT="${TEST_INSTALL_DIR}/test-pulse.sh"
cat > "${TEST_SCRIPT}" <<TESTSCRIPT
#!/bin/bash
# Simulated user testing script

# Set HOME to test directory
export HOME="${TEST_INSTALL_DIR}"

# Run zsh with test configuration
exec zsh -c "
  source ${TEST_ZSHRC}

  echo '🎯 Interactive Test Environment'
  echo '==============================='
  echo ''
  echo 'Try these commands:'
  echo '  - Type something and see autosuggestions (gray text)'
  echo '  - Check syntax highlighting (colored commands)'
  echo '  - echo \${pulse_plugins[@]}       # List registered plugins'
  echo '  - echo \${pulse_plugin_stages[@]} # Show plugin stages'
  echo '  - exit                            # Exit test environment'
  echo ''

  # Start interactive shell
  exec zsh
"
TESTSCRIPT

chmod +x "${TEST_SCRIPT}"

echo "════════════════════════════════════════════════"
echo "✨ Test Environment Ready!"
echo "════════════════════════════════════════════════"
echo ""
echo "Test directory: ${TEST_INSTALL_DIR}"
echo ""
echo "To test as a user, run:"
echo ""
echo "  cd ${TEST_INSTALL_DIR}"
echo "  HOME=${TEST_INSTALL_DIR} zsh"
echo "  source .zshrc"
echo ""
echo "Or use the test script:"
echo ""
echo "  ${TEST_SCRIPT}"
echo ""
echo "When done, clean up with:"
echo ""
echo "  rm -rf ${TEST_INSTALL_DIR}"
echo ""
echo "════════════════════════════════════════════════"
echo ""

# Offer to run test immediately
echo "Would you like to run the test now? [y/N]"
read -r response

if [[ "$response" =~ ^[Yy]$ ]]; then
  echo ""
  echo "🚀 Starting test environment..."
  echo ""
  exec "${TEST_SCRIPT}"
else
  echo ""
  echo "Test environment preserved at: ${TEST_INSTALL_DIR}"
  echo "Run the test script when ready: ${TEST_SCRIPT}"
fi
